@use "../functions" as f;

.button {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: f.spacer(1) f.spacer(3);
  font-size: f.size(s);
  line-height: f.lines(single);
  text-decoration: none;
  cursor: pointer;
  border: f.border-width(s) solid black;
  border-radius: f.radius(s);

  &:disabled,
  &.is-disabled {
    color: f.color(text, disabled, subdued);
    cursor: not-allowed;
    background: f.color(background, disabled, normal);
    border-color: f.color(border, disabled, normal);

    &:hover,
    &:focus {
      text-decoration: none;
    }
  }

  &:not(:disabled, .is-disabled) {
    &:hover,
    &:focus {
      text-decoration: none;
      filter: brightness(110%);
    }

    &:active {
      filter: brightness(95%);
    }

    &.is-primary {
      color: f.color(text, primary, subdued);
      background: f.color(background, primary, normal);
      border-color: f.color(border, primary, normal);
    }

    &.is-secondary {
      color: f.color(text, secondary, subdued);
      background: f.color(background, secondary, normal);
      border-color: f.color(border, secondary, normal);
    }

    &.is-info {
      color: f.color(text, info, subdued);
      background: f.color(background, info, normal);
      border-color: f.color(border, info, normal);
    }

    &.is-success {
      color: f.color(text, success, subdued);
      background: f.color(background, success, normal);
      border-color: f.color(border, success, normal);
    }

    &.is-warning {
      color: f.color(text, warning, subdued);
      background: f.color(background, warning, normal);
      border-color: f.color(border, warning, normal);
    }

    &.is-danger {
      color: f.color(text, danger, subdued);
      background: f.color(background, danger, normal);
      border-color: f.color(border, danger, normal);
    }

    &.is-outline {
      background: transparent;
    }

    &.is-text {
      background: none;
      border-color: transparent;
    }

    &.is-outline,
    &.is-text {
      &.is-primary {
        color: f.color(border, primary, normal);
      }

      &.is-secondary {
        color: f.color(border, secondary, normal);
      }

      &.is-info {
        color: f.color(border, info, normal);
      }

      &.is-success {
        color: f.color(border, success, normal);
      }

      &.is-warning {
        color: f.color(border, warning, normal);
      }

      &.is-danger {
        color: f.color(border, danger, normal);
      }
    }
  }

  &.is-small {
    padding: f.spacer(1);
    font-size: f.size(xs);
  }

  &.is-medium {
    font-size: f.size(m);
  }

  &.is-large {
    padding: f.spacer(2) f.spacer(4);
    font-size: f.size(l);
  }

  &.is-circle {
    width: 3.5rem;
    height: 3.5rem;
    border-radius: f.radius(circle);
  }

  &.is-pill {
    min-width: 8ch;
    border-radius: f.radius(pill);
  }

  &[aria-busy] {
    color: transparent !important;
    pointer-events: none;
  }

  &[aria-busy]::after {
    position: absolute;
    width: 1em;
    height: 1em;
    content: "";
    border: 2px solid rgb(255 255 255 / 30%);
    border-top-color: f.color(background, foundation);
    border-radius: f.radius(circle);
    animation: spin 0.6s linear infinite;
  }

  &[aria-controls][aria-expanded] {
    &::before {
      display: inline-block;
      margin-right: f.spacer(2);
      font-size: f.size(xs);
    }

    &[aria-expanded="false"]::before {
      content: "\25B6"; /* Right-pointing triangle (▶) */
    }

    &[aria-expanded="true"]::before {
      content: "\25BC"; /* Down-pointing triangle (▼) */
    }
  }
}
